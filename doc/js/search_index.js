var search_data = {"index":{"searchIndex":["auger","config","connection","cql","cqlrequest","dns","dnsdomainrequest","dnsqueryrequest","http","httprequest","project","request","result","server","socket","socketrequest","telnet","telnetrequest","test","before_tests()","close()","close()","close()","close()","close()","cmd()","cql()","dns()","do_requests()","do_tests()","domain()","execute()","get()","header()","http()","https()","load()","load()","load()","load()","method_missing()","new()","new()","new()","new()","new()","new()","new()","new()","open()","open()","open()","open()","open()","open?()","project()","query()","role()","run()","run()","run()","run()","run()","run()","run()","server()","servers()","socket()","telnet()","test()","timeout()","gemfile","license","rakefile","aug"],"longSearchIndex":["auger","auger::config","auger::connection","auger::cql","auger::cqlrequest","auger::dns","auger::dnsdomainrequest","auger::dnsqueryrequest","auger::http","auger::httprequest","auger::project","auger::request","auger::result","auger::server","auger::socket","auger::socketrequest","auger::telnet","auger::telnetrequest","auger::test","auger::request#before_tests()","auger::cql#close()","auger::dns#close()","auger::http#close()","auger::socket#close()","auger::telnet#close()","auger::telnet#cmd()","auger::project#cql()","auger::project#dns()","auger::connection#do_requests()","auger::request#do_tests()","auger::dns#domain()","auger::cql#execute()","auger::http#get()","auger::httprequest#header()","auger::project#http()","auger::project#https()","auger::config::load()","auger::connection::load()","auger::project::load()","auger::request::load()","auger::connection#method_missing()","auger::config::new()","auger::connection::new()","auger::httprequest::new()","auger::project::new()","auger::request::new()","auger::result::new()","auger::server::new()","auger::test::new()","auger::cql#open()","auger::dns#open()","auger::http#open()","auger::socket#open()","auger::telnet#open()","auger::socket#open?()","auger::config#project()","auger::dns#query()","auger::project#role()","auger::cqlrequest#run()","auger::dnsdomainrequest#run()","auger::dnsqueryrequest#run()","auger::httprequest#run()","auger::socketrequest#run()","auger::telnetrequest#run()","auger::test#run()","auger::project#server()","auger::project#servers()","auger::project#socket()","auger::project#telnet()","auger::request#test()","auger::telnet#timeout()","","","",""],"info":[["Auger","","Auger.html","",""],["Auger::Config","","Auger/Config.html","",""],["Auger::Connection","","Auger/Connection.html","",""],["Auger::Cql","","Auger/Cql.html","",""],["Auger::CqlRequest","","Auger/CqlRequest.html","",""],["Auger::Dns","","Auger/Dns.html","",""],["Auger::DnsDomainRequest","","Auger/DnsDomainRequest.html","",""],["Auger::DnsQueryRequest","","Auger/DnsQueryRequest.html","",""],["Auger::Http","","Auger/Http.html","",""],["Auger::HttpRequest","","Auger/HttpRequest.html","",""],["Auger::Project","","Auger/Project.html","",""],["Auger::Request","","Auger/Request.html","",""],["Auger::Result","","Auger/Result.html","",""],["Auger::Server","","Auger/Server.html","",""],["Auger::Socket","","Auger/Socket.html","",""],["Auger::SocketRequest","","Auger/SocketRequest.html","",""],["Auger::Telnet","","Auger/Telnet.html","",""],["Auger::TelnetRequest","","Auger/TelnetRequest.html","",""],["Auger::Test","","Auger/Test.html","",""],["before_tests","Auger::Request","Auger/Request.html#method-i-before_tests","(&block)","<p>callback to be run after request, but before tests\n"],["close","Auger::Cql","Auger/Cql.html#method-i-close","(db)",""],["close","Auger::Dns","Auger/Dns.html#method-i-close","(dns)",""],["close","Auger::Http","Auger/Http.html#method-i-close","(http)",""],["close","Auger::Socket","Auger/Socket.html#method-i-close","(socket)",""],["close","Auger::Telnet","Auger/Telnet.html#method-i-close","(telnet)",""],["cmd","Auger::Telnet","Auger/Telnet.html#method-i-cmd","(arg, &block)",""],["cql","Auger::Project","Auger/Project.html#method-i-cql","(port = 9160, &block)",""],["dns","Auger::Project","Auger/Project.html#method-i-dns","(port = 53, &block)",""],["do_requests","Auger::Connection","Auger/Connection.html#method-i-do_requests","(server)",""],["do_tests","Auger::Request","Auger/Request.html#method-i-do_tests","()","<p>returns array of Auger::Result objects for tests\n"],["domain","Auger::Dns","Auger/Dns.html#method-i-domain","(&block)",""],["execute","Auger::Cql","Auger/Cql.html#method-i-execute","(statement, &block)",""],["get","Auger::Http","Auger/Http.html#method-i-get","(url, &block)",""],["header","Auger::HttpRequest","Auger/HttpRequest.html#method-i-header","(h)",""],["http","Auger::Project","Auger/Project.html#method-i-http","(port = 80, &block)",""],["https","Auger::Project","Auger/Project.html#method-i-https","(port = 443, &block)",""],["load","Auger::Config","Auger/Config.html#method-c-load","(filename)",""],["load","Auger::Connection","Auger/Connection.html#method-c-load","(port, &block)",""],["load","Auger::Project","Auger/Project.html#method-c-load","(name, &block)",""],["load","Auger::Request","Auger/Request.html#method-c-load","(arg, &block)",""],["method_missing","Auger::Connection","Auger/Connection.html#method-i-method_missing","(method, arg)",""],["new","Auger::Config","Auger/Config.html#method-c-new","()",""],["new","Auger::Connection","Auger/Connection.html#method-c-new","(port)",""],["new","Auger::HttpRequest","Auger/HttpRequest.html#method-c-new","(url)",""],["new","Auger::Project","Auger/Project.html#method-c-new","(name)",""],["new","Auger::Request","Auger/Request.html#method-c-new","(arg)",""],["new","Auger::Result","Auger/Result.html#method-c-new","(test, outcome)",""],["new","Auger::Server","Auger/Server.html#method-c-new","(name, options)",""],["new","Auger::Test","Auger/Test.html#method-c-new","(name, block)",""],["open","Auger::Cql","Auger/Cql.html#method-i-open","(host, options)",""],["open","Auger::Dns","Auger/Dns.html#method-i-open","(host, options)",""],["open","Auger::Http","Auger/Http.html#method-i-open","(host, options)",""],["open","Auger::Socket","Auger/Socket.html#method-i-open","(host, options)",""],["open","Auger::Telnet","Auger/Telnet.html#method-i-open","(host, options)",""],["open?","Auger::Socket","Auger/Socket.html#method-i-open-3F","(&block)",""],["project","Auger::Config","Auger/Config.html#method-i-project","(name, &block)",""],["query","Auger::Dns","Auger/Dns.html#method-i-query","(name, &block)",""],["role","Auger::Project","Auger/Project.html#method-i-role","(name, *args)",""],["run","Auger::CqlRequest","Auger/CqlRequest.html#method-i-run","(db)",""],["run","Auger::DnsDomainRequest","Auger/DnsDomainRequest.html#method-i-run","(dns)",""],["run","Auger::DnsQueryRequest","Auger/DnsQueryRequest.html#method-i-run","(dns)",""],["run","Auger::HttpRequest","Auger/HttpRequest.html#method-i-run","(http)",""],["run","Auger::SocketRequest","Auger/SocketRequest.html#method-i-run","(socket)",""],["run","Auger::TelnetRequest","Auger/TelnetRequest.html#method-i-run","(telnet)",""],["run","Auger::Test","Auger/Test.html#method-i-run","(response)","<p>you can call test with no block if you just want to return response value\n"],["server","Auger::Project","Auger/Project.html#method-i-server","(*args)",""],["servers","Auger::Project","Auger/Project.html#method-i-servers","(roles = [])","<p>return array of servers for given array of roles (default to all)\n"],["socket","Auger::Project","Auger/Project.html#method-i-socket","(port, &block)",""],["telnet","Auger::Project","Auger/Project.html#method-i-telnet","(port = 23, &block)",""],["test","Auger::Request","Auger/Request.html#method-i-test","(name, &block)",""],["timeout","Auger::Telnet","Auger/Telnet.html#method-i-timeout","(value)",""],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’ gem ‘host_range’ gem ‘rainbow’ gem ‘cassandra-cql’\ngem ‘net-dns’ gem ‘json’\n"],["LICENSE","","LICENSE.html","","<p>Copyright © 2012 Grant Heffernan\n<p>MIT License\n<p>Permission is hereby granted, free of charge, to any person …\n"],["Rakefile","","Rakefile.html","","<p>#!/usr/bin/env rake require “bundler/gem_tasks” require “rake/rdoctask”\n<p>Rake::RDocTask.new …\n"],["aug","","bin/aug.html","","<p>AUGER_DIR = File.dirname(File.dirname(__FILE__)) AUGER_LIB =\nFile.join(AUGER_DIR, ‘lib’)\n<p>if ENV == nil …\n"]]}}